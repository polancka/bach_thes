import 'package:bach_thes/components/personal_button.dart';
import 'package:bach_thes/components/text_field.dart';
import 'package:bach_thes/pages/home_page.dart';
import 'package:flutter/material.dart';

class RegistrationPage extends StatefulWidget {
  const RegistrationPage({Key? key}) : super(key: key);

  @override
  _RegistrationPage createState() => _RegistrationPageState();
}

class _RegistrationPageState extends State<RegistrationPage>{
  @override
  Widget buil(BuildContext context){
    return Scaffold(
        backgroundColor: Colors.white,
        body: SafeArea(
          child: Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const Text(
                  "Register now!",
                  style: TextStyle(
                      color: Colors.black,
                      fontSize: 25,
                      fontWeight: FontWeight.w500),
                ),
                const SizedBox(height: 5),
                /*PersonalizedTextInputField(
                    hintText: "Name",
                    obscureText: false,
                    controller: nameController),
                const SizedBox(height: 3),
                PersonalizedTextInputField(
                    hintText: "Email",
                    obscureText: false,
                    controller: emailController),
                const SizedBox(height: 3),
                PersonalizedTextInputField(
                    hintText: "Set password",
                    obscureText: true,
                    controller: passwordController),*/
                const SizedBox(height: 3),

                GestureDetector(
                    onTap: () {
                      Navigator.push(context,
                          MaterialPageRoute(builder: (context) => HomePage()));
                    },
                    child: const Text("Register now!")),

                //PersonalButton(text: "Register", onTap: RegisterUser())
              ],
            ),
          ),
        ));
  }
}
  //final nameController = TextEditingController();
  //final emailController = TextEditingController();
  //final passwordController = TextEditingController();

  /*RegisterUser(ContextMenuButtonItem context) {GestureDetector(
                  onTap: () {
                    Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) => RegistrationPage()));
                  },
                  child: const Text(
                    "Not a member yet? Sign up here!",
                    style: TextStyle(fontWeight: FontWeight.w500),
                  ),
                )

  }*/




-----------------------
Navigator.push(context,
                          MaterialPageRoute(builder: (context) => HomePage()));
                    },
.--------------------------------
OLD LOGIN PAGE 
//the login page, where user inputs his email and password and signs in the application
//user can also sign in with appleId or googleId
//or he can register if they are not using the application already


import 'package:bach_thes/components/personal_button.dart';
import 'package:bach_thes/components/text_field.dart';
//import 'package:bach_thes/pages/authentication_page.dart';
import 'package:bach_thes/pages/home_page.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:bach_thes/components/square_tile.dart';
//import 'package:firebase_auth/firebase_auth.dart';
import 'registration_page.dart';

class LoginPage extends StatefulWidget {
  LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  // text editing controllers

  final emailController = TextEditingController();
  final passwordController = TextEditingController();

  void signUserIn() async {
    await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: emailController.text, password: passwordController.text);
  }

  //build function
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        backgroundColor: Color.fromARGB(255, 197, 202, 204),
        body: SafeArea(
          child: Center(
              child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                //the main elements of the login page
                //logo
                SquareTile(imageUrl: 'lib/images/gore.png'),

                const SizedBox(
                  height: 20,
                ),

                // email textbox
                PersonalizedTextInputField(
                  hintText: 'Enter your email',
                  obscureText: false,
                  controller: emailController,
                ),

                const SizedBox(
                  height: 20,
                ),

                //password textbox
                PersonalizedTextInputField(
                  hintText: 'Enter your password',
                  obscureText: true,
                  controller: passwordController,
                ),

                const SizedBox(
                  height: 10,
                ),

                //forgot password?
                Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 25.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.end,
                    children: [
                      Text(
                        'Forgot Password?',
                        style: TextStyle(color: Colors.grey[600]),
                      ),
                    ],
                  ),
                ),

                const SizedBox(
                  height: 10,
                ),

                //sign in button with function to sign the user in
                PersonalButton(text: "Sign in", onTap: _navigateToHomePage(context)),

                const SizedBox(
                  height: 20,
                ),

          
                //Not a member yet? Sign up!
                GestureDetector(
                  onTap: () {
                    _navigateToRegistrationPage(context);
                  },
                  child: const Text(
                    "Not a member yet? Sign up here!",
                    style: TextStyle(fontWeight: FontWeight.w500),
                  ),
                )
              ])),
        ));
  }
}

void _navigateToRegistrationPage(BuildContext context) {
  Navigator.of(context)
      .push(MaterialPageRoute(builder: (context) => RegistrationPage()));
}

void _navigateToHomePage(BuildContext context) {
  Navigator.of(context)
      .push(MaterialPageRoute(builder: (context) => HomePage()));
}
_____________________________________________________________________________________
Another way of navigating pages
 {
                WidgetsBinding.instance!.addPostFrameCallback((_) {
                  Navigator.pushReplacement(
                      context, MaterialPageRoute(builder: (_) => HomePage()));
                });
              }

_____________________________________________________________________________________
Personalized text fields 

Align reusableTextFieldEmail(String hinttext, TextEditingController controller,
    bool isPassword, IconData icon) {
  return Align(
      alignment: Alignment.center,
      child: TextFormField(
        keyboardType: TextInputType.emailAddress,
        style: TextStyle(
          color: Colors.white,
        ),
        controller: controller,
        obscureText: isPassword,
        decoration: InputDecoration(
          prefixIcon: Icon(
            icon,
            color: Colors.white,
          ),
          labelText: hinttext,
          filled: true,
          floatingLabelBehavior: FloatingLabelBehavior.never,
          fillColor: Colors.white.withOpacity(0.3),
          labelStyle: TextStyle(
            color: Colors.white,
            fontWeight: FontWeight.w400,
          ),
          border: OutlineInputBorder(
              borderRadius: BorderRadius.circular(20.0),
              borderSide: BorderSide(width: 0, style: BorderStyle.none)),
        ),
      ));
}

Align reusableTextFieldPassword(String hinttext,
    TextEditingController controller, bool isPassword, IconData icon) {
  return Align(
      alignment: Alignment.center,
      child: TextFormField(
        validator: (value) {
          if (value == null ||
              value.isEmpty ||
              !value.contains('@') ||
              !value.contains('.')) {
            return 'Invalid Email';
          }
          return null;
        },
        style: TextStyle(
          color: Colors.white,
        ),
        controller: controller,
        obscureText: isPassword,
        decoration: InputDecoration(
          prefixIcon: Icon(
            icon,
            color: Colors.white,
          ),
          labelText: hinttext,
          filled: true,
          floatingLabelBehavior: FloatingLabelBehavior.never,
          fillColor: Colors.white.withOpacity(0.3),
          labelStyle: TextStyle(
            color: Colors.white,
            fontWeight: FontWeight.w400,
          ),
          border: OutlineInputBorder(
              borderRadius: BorderRadius.circular(20.0),
              borderSide: BorderSide(width: 0, style: BorderStyle.none)),
        ),
      ));
}
------------------------------------------------
registration as statefull widgetsclass RegistrationPage extends StatefulWidget {
  final RegistrationController controller;
  final RegistrationModel model;
  const RegistrationPage(
      {super.key, required this.controller, required this.model});

  @override
  State<RegistrationPage> createState() => _RegistrationPageState();
}

class _RegistrationPageState extends State<RegistrationPage> {
  TextEditingController newNameController = TextEditingController();
  TextEditingController newEmailController = TextEditingController();
  TextEditingController newPasswordController = TextEditingController();
  -------------------------------------------
  Search peaks build method that worked (retrieving from mock database)

  import 'package:bach_thes/models/peak.dart';
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:bach_thes/models/mock_database/mock_peak.dart';
import 'package:bach_thes/globals.dart';

class SearchPeaks extends StatelessWidget {
  const SearchPeaks({super.key});

  @override
  Widget build(BuildContext context) {
    return SafeArea(
        child: Scaffold(
            backgroundColor: Colors.pink,
            appBar: AppBar(
              backgroundColor: Colors.white,
              title: Text(
                "Search Slovenian peaks",
                style: TextStyle(color: Colors.pinkAccent),
              ),
            ),
            body: Container(
                child: ListView.separated(
                    itemCount: MockPeak.FetchAll().length,
                    itemBuilder: (context, index) =>
                        _buildListItem(context, MockPeak.FetchAll()[index]),
                    separatorBuilder: (context, index) => SizedBox(
                          height: 10,
                        )))));
  }
}

Widget _buildListItem(BuildContext context, Peak peak) {
  return Container(
      padding: EdgeInsets.all(10),
      decoration: BoxDecoration(
          color: Colors.white, borderRadius: BorderRadius.circular(20)),
      child: ListTile(
        leading: Icon(Icons.hiking_outlined),
        title: Text("${peak.name},  ${peak.altitude}m"),
        subtitle: Text(peak.description),
        trailing: Icon(Icons.keyboard_double_arrow_right_outlined),
      ));
}
.---------------------------------------------------------
FUNCTIONAL LIST OF PEAKS (READING FROM MOCK DATABASE)
import 'package:bach_thes/models/peak.dart';
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:bach_thes/models/mock_database/mock_peak.dart';
import 'package:bach_thes/globals.dart';
import 'package:bach_thes/controllers/list_of_peaks_controller.dart';


//UI for the list of peaks shown during search (?) function

class SearchPeaks extends StatelessWidget {
  const SearchPeaks({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        backgroundColor: Colors.pinkAccent,
        appBar: AppBar(
          backgroundColor: Colors.pinkAccent,
          title: Text(
            "Search Slovenian peaks",
            style: TextStyle(color: Colors.white),
          ),
        ),
        body: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Container(
              child: ListView.separated(
                  itemCount: MockPeak.FetchAll().length,
                  itemBuilder: (context, index) =>
                      buildListItem(context, MockPeak.FetchAll()[index]),
                  separatorBuilder: (context, index) => const SizedBox(
                        height: 10,
                      ))),
        ));
  }
}

